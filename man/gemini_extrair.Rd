% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gemini_extrair.R
\name{gemini_extrair}
\alias{gemini_extrair}
\title{Gera Texto com a API Google Gemini}
\usage{
gemini_extrair(
  x,
  instrucoes = NULL,
  perguntas = NULL,
  chaves = NULL,
  api_key = NULL,
  temperatura = 0.7,
  var_top_p = 0.8,
  var_top_k = 20,
  model_version = "gemini-1.5-pro"
)
}
\arguments{
\item{x}{String. O texto base sobre o qual as instruções serão aplicadas.}

\item{instrucoes}{String. Instruções sobre o tema do texto a ser gerado. O padrão é "Escreva um texto sobre o seguinte tema:".}

\item{perguntas}{Vetor de Strings. Perguntas específicas para direcionar a geração do texto.}

\item{chaves}{Vetor de Strings. As chaves esperadas no resultado JSON.}

\item{api_key}{String. A chave da API Google Gemini. Se não for fornecida, a função tentará usar a variável de ambiente "GEMINI_KEY".}

\item{temperatura}{Numeric. Define a aleatoriedade do texto gerado. Valores mais baixos tornam o texto mais focado e determinístico (padrão = 0.7).}

\item{var_top_p}{Numeric. Controla a diversidade ao considerar as palavras mais prováveis até que a soma de suas probabilidades seja p (padrão = 0.8).}

\item{var_top_k}{Integer. Limita o número de palavras mais prováveis consideradas durante a geração (padrão = 20).}

\item{model_version}{String. A versão do modelo a ser usada (padrão = "gemini-1.5-pro").}
}
\value{
Lista. Retorna uma lista contendo as respostas geradas pela API.
}
\description{
Esta função gera texto com base nas instruções e perguntas fornecidas, utilizando a API Google Gemini.
}
\examples{
\dontrun{
resultado <- gemini_extrair(
  x = "Power BI",
  instrucoes = "Texto de vendas sobre o tema",
  perguntas = c("Texto de vendas"),
  chaves = c("resposta"),
  api_key = "sua_api_key"
)
print(resultado)
}

}
